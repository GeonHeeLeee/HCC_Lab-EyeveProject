{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LeeGeonHee\\\\Desktop\\\\HCC \\uC5F0\\uAD6C\\uC2E4\\\\Eyeve Project\\\\\\uC2E4\\uC81C \\uD504\\uB85C\\uC81D\\uD2B8\\\\eyeveProject\\\\front\\\\src\\\\pages\\\\loginPage\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styles from '../../styles/login.module.css';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { show } from '../../store/modules/showSignupSlice';\nimport { login, logout } from '../../store/modules/isLoginSlice';\nimport { setLoginUsername } from '../../store/modules/loginUsernameSlice';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = 'http://localhost:8081';\nfunction Login() {\n  _s();\n  const dispatch = useDispatch();\n  const isLogin = useSelector(state => state.isLogin.value);\n  const navigate = useNavigate();\n  console.log(isLogin);\n  const [loginState, setLoginState] = useState({\n    userId: '',\n    userPassword: ''\n  });\n  const handleLoginSubmit = e => {\n    e.preventDefault();\n    if (!loginState.userId) {\n      return alert('아이디를 입력하세요.');\n    } else if (!loginState.userPassword) {\n      return alert('패스워드를 입력하세요.');\n    }\n    //로그인 처리\n\n    /*\r\n    \r\n    1.axios 요청을 통해 서버로 입력받은 아이디와 패스워드 전송\r\n      2.서버로부터 받은 상태코드에 따라 로그인 상태 변수 바꾸기\r\n      3. 로그인 성공 시, \r\n      3-1. 로컬 스토리지에 받은 토큰 값 저장\r\n      3-2. 토큰 마이페이지로 이동\r\n      4. 페이지가 새로고침 시, 로컬 스토리지에 있는 토큰 값을 바탕으로 isLogin 값 갱신 (useEffect 사용)\r\n      */\n\n    axios.post(`${API}/users/login`, loginState, {\n      withCredentials: true\n    }).then(res => {\n      console.log(res);\n      if (res.status === 400) {\n        // 로그인 실패\n\n        return alert('로그인 실패.');\n      } else if (res.state === 200) {\n        // 로그인 성공\n\n        // 헤더로부터 sessionId 가져오기\n        let accessToken = res.headers['authorization'];\n        console.log(accessToken);\n        console.log('userName: ', res.data.userName);\n        console.log('userId: ', res.data.userId);\n        dispatch(login());\n        dispatch(setLoginUsername(loginState.userId));\n\n        // localstorage에 세선 아이디 저장\n        localStorage.setItem('sessionId', accessToken);\n        navigate('/mypage');\n        return res;\n      }\n    }).catch(error => {\n      if (axios.isAxiosError(error)) {\n        console.log('error message: ', error.message);\n        // navigate('/mypage'); 실험\n        return alert('로그인 실패');\n      } else {\n        console.log('unexpected error: ', error);\n        return alert('로그인 실패');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.loginBox,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loginWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Eyeve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.loginForm,\n        method: \"post\",\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"userID\",\n          placeholder: \"ID\",\n          value: loginState.userId\n          // onChange={handleId}\n          ,\n          onChange: e => {\n            setLoginState({\n              ...loginState,\n              userId: e.target.value\n            });\n            console.log(loginState);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"userPassword\",\n          placeholder: \"Password\",\n          value: loginState.userPassword,\n          onChange: e => {\n            setLoginState({\n              ...loginState,\n              userPassword: e.target.value\n            });\n            console.log(loginState);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Login\",\n          onClick: handleLoginSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        onClick: () => {\n          dispatch(show());\n        },\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"oVRsD+iAIk9aSveo9BE83FpeZ3Y=\", false, function () {\n  return [useDispatch, useSelector, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","styles","useState","useSelector","useDispatch","show","login","logout","setLoginUsername","axios","useNavigate","jsxDEV","_jsxDEV","API","Login","_s","dispatch","isLogin","state","value","navigate","console","log","loginState","setLoginState","userId","userPassword","handleLoginSubmit","e","preventDefault","alert","post","withCredentials","then","res","status","accessToken","headers","data","userName","localStorage","setItem","catch","error","isAxiosError","message","className","loginBox","children","loginWrapper","fileName","_jsxFileName","lineNumber","columnNumber","loginForm","method","action","type","name","placeholder","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LeeGeonHee/Desktop/HCC 연구실/Eyeve Project/실제 프로젝트/eyeveProject/front/src/pages/loginPage/Login.jsx"],"sourcesContent":["import React from 'react';\r\nimport styles from '../../styles/login.module.css';\r\n\r\nimport { useState } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { show } from '../../store/modules/showSignupSlice';\r\nimport { login, logout } from '../../store/modules/isLoginSlice';\r\nimport { setLoginUsername } from '../../store/modules/loginUsernameSlice';\r\nimport axios from 'axios';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst API = 'http://localhost:8081';\r\n\r\nfunction Login() {\r\n  const dispatch = useDispatch();\r\n  const isLogin = useSelector((state) => state.isLogin.value);\r\n  const navigate = useNavigate();\r\n\r\n  console.log(isLogin);\r\n  const [loginState, setLoginState] = useState({\r\n    userId: '',\r\n    userPassword: '',\r\n  });\r\n\r\n  const handleLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!loginState.userId) {\r\n      return alert('아이디를 입력하세요.');\r\n    } else if (!loginState.userPassword) {\r\n      return alert('패스워드를 입력하세요.');\r\n    }\r\n    //로그인 처리\r\n\r\n    /*\r\n    \r\n    1.axios 요청을 통해 서버로 입력받은 아이디와 패스워드 전송\r\n\r\n    2.서버로부터 받은 상태코드에 따라 로그인 상태 변수 바꾸기\r\n\r\n    3. 로그인 성공 시, \r\n      3-1. 로컬 스토리지에 받은 토큰 값 저장\r\n      3-2. 토큰 마이페이지로 이동\r\n\r\n    4. 페이지가 새로고침 시, 로컬 스토리지에 있는 토큰 값을 바탕으로 isLogin 값 갱신 (useEffect 사용)\r\n\r\n    */\r\n\r\n    axios\r\n      .post(`${API}/users/login`, loginState, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        if (res.status === 400) {\r\n          // 로그인 실패\r\n\r\n          return alert('로그인 실패.');\r\n        } else if (res.state === 200) {\r\n          // 로그인 성공\r\n\r\n          // 헤더로부터 sessionId 가져오기\r\n          let accessToken = res.headers['authorization'];\r\n\r\n          console.log(accessToken);\r\n          console.log('userName: ', res.data.userName);\r\n          console.log('userId: ', res.data.userId);\r\n\r\n          dispatch(login());\r\n          dispatch(setLoginUsername(loginState.userId));\r\n\r\n          // localstorage에 세선 아이디 저장\r\n          localStorage.setItem('sessionId', accessToken);\r\n\r\n          navigate('/mypage');\r\n\r\n          return res;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (axios.isAxiosError(error)) {\r\n          console.log('error message: ', error.message);\r\n          // navigate('/mypage'); 실험\r\n          return alert('로그인 실패');\r\n        } else {\r\n          console.log('unexpected error: ', error);\r\n          return alert('로그인 실패');\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.loginBox}>\r\n      <div className={styles.loginWrapper}>\r\n        <h2>Eyeve</h2>\r\n        <form className={styles.loginForm} method='post' action=''>\r\n          <input\r\n            type='text'\r\n            name='userID'\r\n            placeholder='ID'\r\n            value={loginState.userId}\r\n            // onChange={handleId}\r\n            onChange={(e) => {\r\n              setLoginState({\r\n                ...loginState,\r\n                userId: e.target.value,\r\n              });\r\n\r\n              console.log(loginState);\r\n            }}\r\n          />\r\n          <input\r\n            type='password'\r\n            name='userPassword'\r\n            placeholder='Password'\r\n            value={loginState.userPassword}\r\n            onChange={(e) => {\r\n              setLoginState({\r\n                ...loginState,\r\n                userPassword: e.target.value,\r\n              });\r\n\r\n              console.log(loginState);\r\n            }}\r\n          />\r\n          <input type='submit' value='Login' onClick={handleLoginSubmit} />\r\n        </form>\r\n        <h3\r\n          onClick={() => {\r\n            dispatch(show());\r\n          }}>\r\n          회원가입\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}